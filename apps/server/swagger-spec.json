{"openapi":"3.0.0","paths":{"/":{"get":{"operationId":"AppController_root","parameters":[],"responses":{"200":{"description":""}}}},"/v1/me":{"get":{"operationId":"AppController_me","parameters":[{"name":"resyncOrganization","required":true,"in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":""}}}},"/v1/apiKeys":{"get":{"operationId":"ApiKeysController_findAllByCustomer","summary":"Get all apiKeys for the signed in user","parameters":[],"responses":{"200":{"description":"Return all apiKeys."}},"tags":["apiKeys"],"security":[{"bearer":[]}]}},"/v1/public/flows/{slug}":{"get":{"operationId":"FlowsController_getBySlug","summary":"Get a flow by slug","parameters":[],"responses":{"200":{"description":"The flow has been successfully returned."},"404":{"description":"The flow was not found."}},"tags":["flows"],"security":[{"bearer":[]}]}},"/v1/public/flows":{"get":{"operationId":"FlowsController_find","summary":"Get all public flows for a given application","parameters":[],"responses":{"200":{"description":"Return all flows."}},"tags":["flows"],"security":[{"bearer":[]}]}},"/v1/flows/{id}/versions":{"get":{"operationId":"FlowsController_getFlowVersions","summary":"Get all versions of a flow by id","parameters":[],"responses":{"200":{"description":"The flows have been successfully returned."},"404":{"description":"The flows were not found."}},"tags":["flows"],"security":[{"bearer":[]}]},"post":{"operationId":"FlowsController_createFlowVersion","summary":"Adds a new flow for the signed in user","parameters":[],"responses":{"201":{"description":""}},"tags":["flows"],"security":[{"bearer":[]}]}},"/v1/flows/{id}":{"get":{"operationId":"FlowsController_get","summary":"Get a flow by id","parameters":[{"name":"version","required":true,"in":"query","schema":{"type":"string"}},{"name":"startDate","required":true,"in":"query","schema":{"type":"string"}},{"name":"endDate","required":true,"in":"query","schema":{"type":"string"}},{"name":"includeTimeSeriesStats","required":true,"in":"query","schema":{"type":"string"}},{"name":"timeZoneOffset","required":true,"in":"query","schema":{"type":"string"}},{"name":"forceStatsRefresh","required":true,"in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"The flow has been successfully returned."},"404":{"description":"The flow was not found."}},"tags":["flows"],"security":[{"bearer":[]}]},"delete":{"operationId":"FlowsController_delete","summary":"Delete flow","parameters":[],"responses":{"204":{"description":"The flow has been successfully deleted."},"403":{"description":"Forbidden."}},"tags":["flows"],"security":[{"bearer":[]}]},"put":{"operationId":"FlowsController_update","summary":"Update flow","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateFlowDto"}}}},"responses":{"200":{"description":"The flow has been successfully updated."},"403":{"description":"Forbidden."}},"tags":["flows"],"security":[{"bearer":[]}]}},"/v1/flows":{"get":{"operationId":"FlowsController_findAllByCustomer","summary":"Get all flows for the signed in user","parameters":[],"responses":{"200":{"description":"Return all flows."}},"tags":["flows"],"security":[{"bearer":[]}]},"post":{"operationId":"FlowsController_post","summary":"Adds a new flow for the signed in user","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateFlowDto"}}}},"responses":{"201":{"description":""}},"tags":["flows"],"security":[{"bearer":[]}]}},"/v1/flows/{id}/activate":{"put":{"operationId":"FlowsController_activateDraft","summary":"Set selected flow version as active","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ActivateFlowDto"}}}},"responses":{"201":{"description":"The flow has been successfully been activated."},"403":{"description":"Forbidden."}},"tags":["flows"],"security":[{"bearer":[]}]}},"/v1/webhooks/clerk":{"post":{"operationId":"WebhooksController_create","parameters":[],"responses":{"201":{"description":""}}}},"/v1/public/userGroups":{"post":{"operationId":"UserGroupsController_postPublic","summary":"Adds a new property or events for a given user group","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddPropertyOrEventsToUserGroupDTO"}}}},"responses":{"201":{"description":"The property has been successfully created or updated."}},"tags":["userGroups"],"security":[{"bearer":[]}]}},"/v1/public/flowResponses":{"post":{"operationId":"FlowResponsesController_post","summary":"Adds a new flowResponse for the signed in flowResponse","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateFlowResponseDTO"}}}},"responses":{"201":{"description":""}},"tags":["flowResponses"],"security":[{"bearer":[]}]}},"/v1/flowResponses/export/{flowSlug}":{"get":{"operationId":"FlowResponsesController_get","summary":"Downloads all flowresponses as a CSV","parameters":[{"name":"flowSlug","required":true,"in":"path","schema":{"type":"string"}},{"name":"version","required":true,"in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"tags":["flowResponses"],"security":[{"bearer":[]}]}},"/v1/public/users":{"post":{"operationId":"UsersController_postPublic","summary":"Adds a new property or events for a given user","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddPropertyOrEventsToUserDTO"}}}},"responses":{"201":{"description":"The property has been successfully created or updated."}},"tags":["users"],"security":[{"bearer":[]}]}},"/v1/users":{"get":{"operationId":"UsersController_get","summary":"Get a user by foreign id","parameters":[{"name":"foreignId","required":true,"in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"The user has been successfully returned."},"404":{"description":"The user was not found."}},"tags":["users"],"security":[{"bearer":[]}]},"delete":{"operationId":"UsersController_delete","summary":"Delete a user by foreign id","parameters":[{"name":"foreignId","required":true,"in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"The user has been successfully deleted."},"404":{"description":"The user was not found."}},"tags":["users"],"security":[{"bearer":[]}]}},"/v1/public/userFlowStates/{flowSlug}":{"get":{"operationId":"UserFlowStatesController_getByFlowSlug","summary":"Get the state of a user in a flow","parameters":[{"name":"foreignUserId","required":true,"in":"query","schema":{"type":"string"}},{"name":"foreignUserGroupId","required":true,"in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"The flow state was found"},"404":{"description":"The flow or user was not found."}},"tags":["userFlowStates"],"security":[{"bearer":[]}]}},"/v1/public/userFlowStates":{"get":{"operationId":"UserFlowStatesController_getAllForUser","summary":"Get the state of a user in a flow","parameters":[{"name":"foreignUserId","required":true,"in":"query","schema":{"type":"string"}},{"name":"foreignUserGroupId","required":true,"in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"The flow state was found"},"404":{"description":"The flow or user was not found."}},"tags":["userFlowStates"],"security":[{"bearer":[]}]}},"/v1/userFlowStates/{flowSlug}/{userSlug}":{"get":{"operationId":"UserFlowStatesController_getPrivate","summary":"Get the state of a user in a flow","parameters":[],"responses":{"200":{"description":"The flow state was found"},"404":{"description":"The flow or user was not found."}},"tags":["userFlowStates"],"security":[{"bearer":[]}]},"delete":{"operationId":"UserFlowStatesController_deleteUserFlowState","summary":"Delete the state of a user in a flow","parameters":[],"responses":{"201":{"description":"The flow state was deleted"},"404":{"description":"The flow or user was not found."}},"tags":["userFlowStates"],"security":[{"bearer":[]}]}},"/v1/userFlowStates":{"get":{"operationId":"UserFlowStatesController_getAllUserFlowStates","summary":"Get the state of a user in all flows","parameters":[{"name":"userQuery","required":true,"in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"The flow state(s) were found"},"404":{"description":"The user was not found."}},"tags":["userFlowStates"],"security":[{"bearer":[]}]}},"/v1/thirdParty/digitalocean/resources":{"post":{"operationId":"DigitalOceanController_processRequest","parameters":[],"responses":{"201":{"description":""}},"tags":["apiKeys"],"security":[{"bearer":[]}]}},"/v1/thirdParty/digitalocean/sso":{"post":{"operationId":"DigitalOceanController_processSSO","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DigitalOceanSSODTO"}}}},"responses":{"201":{"description":""}},"tags":["apiKeys"],"security":[{"bearer":[]}]}},"/v1/thirdParty/cdp/segment":{"post":{"operationId":"SegmentController_processRequest","parameters":[],"responses":{"201":{"description":""}},"tags":["segment"],"security":[{"bearer":[]}]}}},"info":{"title":"Frigade API","description":"Official Frigade API documentation","version":"1.0","contact":{}},"tags":[],"servers":[],"components":{"schemas":{"CreateFlowDto":{"type":"object","properties":{}},"ActivateFlowDto":{"type":"object","properties":{}},"UpdateFlowDto":{"type":"object","properties":{}},"AddPropertyOrEventsToUserGroupDTO":{"type":"object","properties":{}},"CreateFlowResponseDTO":{"type":"object","properties":{}},"AddPropertyOrEventsToUserDTO":{"type":"object","properties":{}},"DigitalOceanSSODTO":{"type":"object","properties":{}}}}}